@using Microsoft.AspNetCore.Identity;
@using System.Security.Claims;
@model ASC.Web.Areas.Accounts.Models.ServiceEngineerViewModel

@inject UserManager<IdentityUser> userManager;

@{
    Layout = "_SecureLayout";
}

<div>
    <div class="row"></div>
    <div class="row padding-left-28px padding-right-28px">
        <div class="row 2-depth-3">
            <div class="section white-text padding-left-18px blue-grey lighten-1">
                <h5>Users</h5>
            </div>
        </div>
        <div class="col s12 padding-bottom-15px">
            <div class="divider"></div>
            @if (Model.ServiceEngineers != null)
            {
                // Display List of Service Engineers
                <table class="highlight centered" id="tblServiceEngineers">
                    <thead>
                        <tr>
                            <th data-field="Email">Email</th>
                            <th data-field="UserName">Name</th>
                            @* <th data-field="IsActive">Is Active</th> *@
                            <th data-field="IsActiveImg">Is Active</th>
                            <th data-field="Actions">Edit User</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model.ServiceEngineers)
                        {
                            var identity = await userManager.GetClaimsAsync(user);
                            <tr>
                                <td>@user.Email</td>
                                <td>@user.UserName</td>
                                @* <td>@(bool.Parse(identity.SingleOrDefault(p => p.Type == "IsActive").Value))</td> *@
                                <td>
                                    <img src="@(bool.Parse(identity.SingleOrDefault(p => p.Type == "IsActive").Value) ? "/images/green_tick.png" : "/images/red_cross.png")" />
                                </td>
                                <td>
                                    <i class="small material-icons edit cursor-hand">mode_edit</i>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                // In case of No records, display no records message
                <div class="card blue-grey lighten-1">
                    <div class="card-content white-text">
                        <span class="card-title">No Service Engineers !!!</span>
                        <p>No Service Engineers found, please add a Service Engineer to system.</p>
                    </div>
                </div>
            }
        </div>
        <div class="row">
            <div class="col s12">
                <div class="row 2-depth-3">
                    <div class="section white-text padding-left-18px blue-grey lighten-1">
                        <h5>Service Engineer Details</h5>
                    </div>
                </div>
                <div class="divider"></div>
                <form asp-controller="Account" asp-action="ServiceEngineers" method="post" class="col s12" id="createUser">
                    <input type="hidden" asp-for="Registration.IsEdit" />
                    <input type="hidden" asp-for="Registration.Email" />
                    <div class="input-field col s6">
                        <label asp-for="Registration.Email" data-error="wrong" data-success="right">Registration Email</label>
                    </div>
                    <div class="input-field col s6">
                        <label asp-for="Registration.UserName" class="validate">Username</label>
                        <input asp-for="Registration.UserName" class="validate" />
                    </div>
                    <div class="input-field col s6">
                        <label asp-for="Registration.Password" class="validate">Password</label>
                        <input asp-for="Registration.Password" class="validate" />
                    </div>
                    <div class="input-field col s6">
                        <label asp-for="Registration.ConfirmPassword" class="validate">Confirm Password</label>
                        <input asp-for="Registration.ConfirmPassword" class="validate" />
                    </div>
                    <div class="input-field col s6">
                        <label>
                            Is Active
                            <input type="checkbox" asp-for="Registration.IsActive" class="validate" />
                            <span></span>
                        </label>
                    </div>
                    <div class="input-field col s6 right-align">
                        <button class="btn waves-effect waves-light light-blue" type="submit" name="action">
                            Create
                            <i class="material-icons right">send</i>
                        </button>
                        <button class="btn waves-effect waves-light red lighten-1" type="button" name="action">
                            Reset
                        </button>
                    </div>
                    <div class="row col s12 right-align asp-validation-summary="All"></div>
                </form>
            </div>
        </div>
        @section Scripts {
            <script>
                $(document).ready(function () {
                    // Initialize DataTable
                    var table = $('#tblServiceEngineers').DataTable({
                        "pageLength": 3,
                        "lengthMenu": [[3, 5, 10, -1], [3, 5, 10, 'All']]
                    });

                    // Make dropdown compatible with Materialize
                    setTimeout(function () {
                        $('select').formSelect();
                    }, 100);

                    $('#tblServiceEngineers').css('width', '100%');

                    // Reset form
                    $(document).on('click', '.reset', function () {
                        $('#createUser')[0].reset();
                        $('#Input_Registration_Email').removeAttr('disabled');
                        $('.btnSubmit').text('Create');
                        $('#Registration_IsEdit').val('False');
                        M.updateTextFields();
                    });

                    // Check if in Edit mode after failed validation
                    if ($('#Registration_IsEdit').val() === 'True') {
                        $('#Input_Registration_Email').attr('disabled', 'disabled');
                    }

                    // Edit user
                    $(document).on('click', '.edit', function () {
                        var user = table.row($(this).parents('tr')).data();
                        $('#Registration_IsEdit').val('True');
                        $('#Input_Registration_Email').val(user[0]).attr('disabled', 'disabled');
                        $('#Registration_UserName').val(user[1]);
                        $('#Registration_IsActive').prop('checked', user[2] === 'True');
                        $('.btnSubmit').text('Save');
                        M.updateTextFields();
                    });

                    // Ensure hidden Email field is updated
                    $(document).on('click', '.btnSubmit', function () {
                        $('#Registration_Email').val($('#Input_Registration_Email').val());
                    });
                });
            </script>
        }
    </div>
</div>